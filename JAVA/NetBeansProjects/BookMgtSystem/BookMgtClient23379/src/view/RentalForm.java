/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import helper.ExportBook;
import helper.ExportRental;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Book;
import model.Rental;
import model.User;
import service.BookInterface;
import service.RentalInterface;
import service.UserInterface;

/**
 *
 * @author Mhz
 */
public class RentalForm extends javax.swing.JFrame {

    /**
     * Creates new form RentalForm
     */
    public RentalForm() {
        initComponents();
        clear();
    }
    private final Book current_book = null;
    
     public void clear(){
       
        titleTxt.setText("");
        authorTxt.setText("");
        publisherTxt.setText("");
        genreTxt.setText("");
        RentalIdTxt.setText("");
        bookIdSearchTxt.setText("");
       fullNamesTxt.setText("");
       emailTxt.setText("");
       userid1Txt.setText(""); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userid1Txt = new javax.swing.JTextField();
        userIdSearchBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        fullNamesTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bookIdSearchTxt = new javax.swing.JTextField();
        bookIdSearchBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        titleTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        authorTxt = new javax.swing.JTextField();
        publisherTxt = new javax.swing.JTextField();
        genreTxt = new javax.swing.JTextField();
        RentalIdTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        dateCombo = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        returnDateCombo = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        rentalStatusCombo = new javax.swing.JComboBox<>();
        saveBtn = new javax.swing.JButton();
        updateTxt = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        userId2Txt = new javax.swing.JTextField();
        userIdSearch2Btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        printBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Rental Form");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(731, 19, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("User ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 71, -1, -1));
        getContentPane().add(userid1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 69, 114, -1));

        userIdSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userIdSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        userIdSearchBtn.setText("Search");
        userIdSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIdSearchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(userIdSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 62, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("FullNames");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 127, -1, -1));
        getContentPane().add(fullNamesTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 125, 146, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Email");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 187, -1, -1));
        getContentPane().add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 185, 146, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Book ID");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 257, -1, -1));
        getContentPane().add(bookIdSearchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 255, 116, -1));

        bookIdSearchBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bookIdSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        bookIdSearchBtn.setText("Search");
        bookIdSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookIdSearchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(bookIdSearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 248, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Title");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 327, -1, -1));
        getContentPane().add(titleTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 322, 146, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Author");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 379, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Publisher");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 426, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Genre");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 486, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Rental ID");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 543, -1, -1));
        getContentPane().add(authorTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 377, 146, -1));
        getContentPane().add(publisherTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 424, 146, -1));
        getContentPane().add(genreTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 484, 146, -1));
        getContentPane().add(RentalIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 541, 146, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Date");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 602, -1, -1));
        getContentPane().add(dateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 597, 146, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Return Date");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 646, -1, -1));
        getContentPane().add(returnDateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 646, 146, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Rental Status");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 701, -1, -1));

        rentalStatusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rented", "Available" }));
        rentalStatusCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rentalStatusComboMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rentalStatusComboMouseReleased(evt);
            }
        });
        getContentPane().add(rentalStatusCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 699, 146, -1));

        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diskette.png"))); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 762, -1, -1));

        updateTxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        updateTxt.setText("Update");
        updateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTxtActionPerformed(evt);
            }
        });
        getContentPane().add(updateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 762, -1, -1));

        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 762, -1, -1));

        clearBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clearBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 762, -1, -1));

        exitBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        getContentPane().add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 762, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("User ID");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(779, 83, -1, -1));
        getContentPane().add(userId2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(886, 81, 404, -1));

        userIdSearch2Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        userIdSearch2Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        userIdSearch2Btn.setText("Search");
        getContentPane().add(userIdSearch2Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1362, 74, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rental  ID", "Book Titlle", "Book Author", "Book ID", "Rental Date", "Return Date", "Status", "User ID", "Names"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTable1ComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 957, 442));

        printBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer.png"))); // NOI18N
        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });
        getContentPane().add(printBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1490, 570, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/5153829.jpg"))); // NOI18N
        jLabel15.setText("jLabel15");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel16.setText("jLabel16");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        clear();
        
    }//GEN-LAST:event_clearBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null, "Do you really want to close the Application", "Select", JOptionPane.YES_NO_OPTION);
            if (res == 0) {
                System.exit(0);
            }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void userIdSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIdSearchBtnActionPerformed
        // TODO add your handling code here:
         if (userid1Txt.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Kindly provide the book Id", "Empty field!", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
            UserInterface intr = (UserInterface) registry.lookup("user");
            User user = new User();
            user.setUserId(userid1Txt.getText());
            user = intr.getUserById(user);
            
            if (user == null) {
                    JOptionPane.showMessageDialog(null, "Record not found!",
                        "Response", JOptionPane.INFORMATION_MESSAGE);
            } else {
                fullNamesTxt.setText(user.getFullnames());
                emailTxt.setText(user.getEmail());
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
            }
        
    }//GEN-LAST:event_userIdSearchBtnActionPerformed

    private void bookIdSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookIdSearchBtnActionPerformed
        // TODO add your handling code here:
        if (bookIdSearchTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kindly provide the book Id", "Empty field!", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
                BookInterface intrf = (BookInterface) registry.lookup("book");
                Book book = new Book();
                book.setBookId(bookIdSearchTxt.getText());
                book = intrf.getBookById(book);
                
                if (book == null) {
                    JOptionPane.showMessageDialog(null, "Record not found!",
                        "Response", JOptionPane.INFORMATION_MESSAGE);
            } else {
                    titleTxt.setText(book.getTitle());
                    authorTxt.setText(book.getAuthor());
                    publisherTxt.setText(book.getPublisher());
                    genreTxt.setText(book.getGenre());
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_bookIdSearchBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        if (userid1Txt.getText().isEmpty() || fullNamesTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || emailTxt.getText().isEmpty() || bookIdSearchTxt.getText().isEmpty() || titleTxt.getText().isEmpty() || authorTxt.getText().isEmpty() || publisherTxt.getText().isEmpty() || genreTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || dateCombo.getDate().equals("") || returnDateCombo.getDate().equals("")) {
            JOptionPane.showMessageDialog(this, "Kindly provide fill all the fields required", "Empty Fields!", JOptionPane.ERROR_MESSAGE);
        } else {
            
            try {
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
                RentalInterface intrf = (RentalInterface) registry.lookup("rental");
                
                Rental rental = new Rental();
                
                User user = new User();
                user.setUserId(userid1Txt.getText());
                user.setEmail(emailTxt.getText());
                user.setFullnames(fullNamesTxt.getText());
                rental.setUser(user);
                
                
                Book book = new Book();
                book.setAuthor(authorTxt.getText());
                book.setGenre(genreTxt.getText());
                book.setTitle(titleTxt.getText());
                book.setPublisher(publisherTxt.getText());
                book.setUserId_fk(userid1Txt.getText());
                book.setBookId(bookIdSearchTxt.getText());
               
                
                rental.setBook(book);
                rental.setStatus((String) rentalStatusCombo.getSelectedItem());
                SimpleDateFormat st = new SimpleDateFormat("YYYY-MM-dd");
                String date = st.format(dateCombo.getDate());
                String date2 = st.format(returnDateCombo.getDate());
                rental.setRentalDate(date);
                rental.setReturnDate(date2);
                rental.setId(Integer.parseInt(RentalIdTxt.getText()));
                String response = intrf.createRental(rental);
                
                if (rental.getStatus() == "rented") {
                    JOptionPane.showMessageDialog(null, "The Book has been rented already", "Book rented", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Rental information saved Successfully", "Success!", JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (Exception e){
                e.printStackTrace();
            }
            
        }
        
        
    }//GEN-LAST:event_saveBtnActionPerformed

    private void rentalStatusComboMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentalStatusComboMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rentalStatusComboMouseReleased

    private void rentalStatusComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentalStatusComboMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rentalStatusComboMouseClicked

    private void jTable1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
                try {
        Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
        RentalInterface intr = (RentalInterface) registry.lookup("rental");
        ArrayList<Rental> rentalList = (ArrayList<Rental>) intr.allRental();

        // Clear existing table data
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

        // Populate the table with rental data
        for (Rental rental : rentalList) {
            Object[] rowData = {
                //rental.getUser().getUserId(),
                //rental.getUser().getFullnames(),
                //rental.getUser().getEmail(),
                rental.getId(),
                rental.getBook().getTitle(),
                rental.getBook().getAuthor(),
                rental.getBook().getBookId(),
                rental.getRentalDate(),
                rental.getReturnDate(),
                rental.getStatus()
            };
            dtm.addRow(rowData);
        }
        } catch (Exception e) {
        e.printStackTrace();
        }
    }//GEN-LAST:event_formComponentShown

    private void updateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTxtActionPerformed
        // TODO add your handling code here:
        if (userid1Txt.getText().isEmpty() || fullNamesTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || emailTxt.getText().isEmpty() || bookIdSearchTxt.getText().isEmpty() || titleTxt.getText().isEmpty() || authorTxt.getText().isEmpty() || publisherTxt.getText().isEmpty() || genreTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || dateCombo.getDate().equals("") || returnDateCombo.getDate().equals("")) {
            JOptionPane.showMessageDialog(this, "Kindly provide fill all the fields required", "Empty Fields!", JOptionPane.ERROR_MESSAGE);
        } else {
            
            try {
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
                RentalInterface intrf = (RentalInterface) registry.lookup("rental");
                
                Rental rental = new Rental();
                
                User user = new User();
                user.setUserId(userid1Txt.getText());
                user.setEmail(emailTxt.getText());
                user.setFullnames(fullNamesTxt.getText());
                rental.setUser(user);
                
                
                Book book = new Book();
                book.setAuthor(authorTxt.getText());
                book.setGenre(genreTxt.getText());
                book.setTitle(titleTxt.getText());
                book.setPublisher(publisherTxt.getText());
                book.setUserId_fk(userid1Txt.getText());
                book.setBookId(bookIdSearchTxt.getText());
                
                rental.setBook(book);
                rental.setStatus((String) rentalStatusCombo.getSelectedItem());
                SimpleDateFormat st = new SimpleDateFormat("YYYY-MM-dd");
                String date = st.format(dateCombo.getDate());
                String date2 = st.format(returnDateCombo.getDate());
                rental.setRentalDate(date);
                rental.setReturnDate(date2);
                rental.setId(Integer.parseInt(RentalIdTxt.getText()));
                String response = intrf.updateRental(rental);
                JOptionPane.showMessageDialog(this, "Rental information updated Successfully", "Success!", JOptionPane.INFORMATION_MESSAGE);
                
            } catch (Exception e){
                e.printStackTrace();
            }        

            
        }
    }//GEN-LAST:event_updateTxtActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if (userid1Txt.getText().isEmpty() || fullNamesTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || emailTxt.getText().isEmpty() || bookIdSearchTxt.getText().isEmpty() || titleTxt.getText().isEmpty() || authorTxt.getText().isEmpty() || publisherTxt.getText().isEmpty() || genreTxt.getText().isEmpty() || RentalIdTxt.getText().isEmpty() || dateCombo.getDate().equals("") || returnDateCombo.getDate().equals("")) {
            JOptionPane.showMessageDialog(this, "Kindly provide fill all the fields required", "Empty Fields!", JOptionPane.ERROR_MESSAGE);
        } else {
            
            try {
                Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
                RentalInterface intrf = (RentalInterface) registry.lookup("rental");
                
                Rental rental = new Rental();
                
                User user = new User();
                user.setUserId(userid1Txt.getText());
                user.setEmail(emailTxt.getText());
                user.setFullnames(fullNamesTxt.getText());
                rental.setUser(user);
                
                
                Book book = new Book();
                book.setAuthor(authorTxt.getText());
                book.setGenre(genreTxt.getText());
                book.setTitle(titleTxt.getText());
                book.setPublisher(publisherTxt.getText());
                book.setUserId_fk(userid1Txt.getText());
                book.setBookId(bookIdSearchTxt.getText());
                
                rental.setBook(book);
                rental.setStatus((String) rentalStatusCombo.getSelectedItem());
                SimpleDateFormat st = new SimpleDateFormat("YYYY-MM-dd");
                String date = st.format(dateCombo.getDate());
                String date2 = st.format(returnDateCombo.getDate());
                rental.setRentalDate(date);
                rental.setReturnDate(date2);
                rental.setId(Integer.parseInt(RentalIdTxt.getText()));
                String response = intrf.deleteRental(rental);
                JOptionPane.showMessageDialog(this, "Rental information deleted Successfully", "Success!", JOptionPane.INFORMATION_MESSAGE);
                
            } catch (Exception e){
                e.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        // TODO add your handling code here:
        try {
            Registry registry = LocateRegistry.getRegistry("127.0.0.1", 81);
            RentalInterface intrf = (RentalInterface) registry.lookup("rental");
            List<Rental> rentalList = intrf.allRental();
            ExportRental.exportToCSV(rentalList);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField RentalIdTxt;
    private javax.swing.JTextField authorTxt;
    private javax.swing.JButton bookIdSearchBtn;
    private javax.swing.JTextField bookIdSearchTxt;
    private javax.swing.JButton clearBtn;
    private com.toedter.calendar.JDateChooser dateCombo;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField fullNamesTxt;
    private javax.swing.JTextField genreTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton printBtn;
    private javax.swing.JTextField publisherTxt;
    private javax.swing.JComboBox<String> rentalStatusCombo;
    private com.toedter.calendar.JDateChooser returnDateCombo;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField titleTxt;
    private javax.swing.JButton updateTxt;
    private javax.swing.JTextField userId2Txt;
    private javax.swing.JButton userIdSearch2Btn;
    private javax.swing.JButton userIdSearchBtn;
    private javax.swing.JTextField userid1Txt;
    // End of variables declaration//GEN-END:variables
}
